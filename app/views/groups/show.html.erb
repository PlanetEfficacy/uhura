<%= render "/shared/group_card", group: @group %>

<div class="container row">
  <ul class="collection col s12 m6 offset-m3">
    <% @group.students.active.each do |student| %>
      <%= render "shared/collection",
          contact: student,
          path: student_path(student, group_id: @group.id),
          relationship: "Student" %>
    <% end %>
  </ul>
</div>

<%= render "/shared/buttons/lg_amber",
    path: new_student_path(group_id: @group.id),
    delete_path: group_path(@group),
    edit_path: edit_group_path(@group) %>

<%= render "shared/delete_modal",
    model: @group,
    path: group_path(@group) %>

<div class="btn btn-primary" id="gdrive" onclick="javascript:onApiLoad()">
Choose Google Drive File
</div>

<script type="text/javascript">

      // The Browser API key obtained from the Google Developers Console.
      var developerKey = 'AIzaSyDfsUZVrB_Bi9wf63Nn8UKZTWSa3xi8q20';

      // The Client ID obtained from the Google Developers Console. Replace with your own Client ID.
      var clientId = "181751844139-5bvjp5d9htlia8hmvbmvpvki1oq94jn3.apps.googleusercontent.com"

      // Scope to use to access user's photos.
      var scope = ['https://www.googleapis.com/auth/drive'];

      var pickerApiLoaded = false;
      var oauthToken;

      // Use the API Loader script to load google.picker and gapi.auth.
      function onApiLoad() {
        gapi.load('auth', {'callback': onAuthApiLoad});
        gapi.load('picker', {'callback': onPickerApiLoad});
      }

      function onAuthApiLoad() {
        window.gapi.auth.authorize(
            {
              'client_id': clientId,
              'scope': scope,
              'immediate': false
            },
            handleAuthResult);
      }

      function onPickerApiLoad() {
        pickerApiLoaded = true;
        createPicker();
      }

      function handleAuthResult(authResult) {
        if (authResult && !authResult.error) {
          oauthToken = authResult.access_token;
          createPicker();
        }
      }

      // Create and render a Picker object for picking user Photos.
      function createPicker() {
        if (pickerApiLoaded && oauthToken) {
          var picker = new google.picker.PickerBuilder().
              addView(google.picker.ViewId.SPREADSHEETS).
              setOAuthToken(oauthToken).
              setDeveloperKey(developerKey).
              // setOrigin(window.location.protocol + '//' + window.location.host).
              setCallback(pickerCallback).
              build();
          picker.setVisible(true);
        }
      }

      // A simple callback implementation.
      function pickerCallback(data) {
        var url = 'nothing';
        if (data[google.picker.Response.ACTION] == google.picker.Action.PICKED) {
          var doc = data[google.picker.Response.DOCUMENTS][0];
          url = doc[google.picker.Document.URL];
        }
        var message = 'You picked: ' + url;
        // document.getElementById('result').innerHTML = message;
        console.log(message)
      }
    </script>
